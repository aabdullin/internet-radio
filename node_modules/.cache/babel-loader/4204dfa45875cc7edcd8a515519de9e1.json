{"ast":null,"code":"var _jsxFileName = \"/Users/artur/Documents/GitHub/pure-react/github-file-list/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Time from './Components/Time';\nimport FileIcon from './Components/FileIcon';\nimport CommitMessage from './Components/CommitMessage';\nimport FileName from './Components/FileName';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FileList({\n  files\n}) {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"file-list\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: files.map(file => /*#__PURE__*/_jsxDEV(FileListItem, {\n        file: file\n      }, file.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_c = FileList;\nFileList.propTypes = {\n  files: PropTypes.array\n};\n\nconst FileListItem = ({\n  file\n}) => /*#__PURE__*/_jsxDEV(\"tr\", {\n  className: \"file-list-item\",\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(FileIcon, {\n      file: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(FileName, {\n      file: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(CommitMessage, {\n      commit: file.latestCommit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Time, {\n      time: file.updated_at\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 5\n}, this);\n\n_c2 = FileListItem;\nFileListItem.propTypes = {\n  file: PropTypes.object.isRequired\n};\nconst testFiles = [{\n  id: 1,\n  name: 'src',\n  type: 'folder',\n  updated_at: \"2016-07-11 21:24:00\",\n  latestCommit: {\n    message: 'Initial commit'\n  }\n}, {\n  id: 2,\n  name: 'tests',\n  type: 'folder',\n  updated_at: \"2016-07-11 21:24:00\",\n  latestCommit: {\n    message: 'Initial commit'\n  }\n}, {\n  id: 3,\n  name: 'README',\n  type: 'file',\n  updated_at: \"2016-07-18 21:24:00\",\n  latestCommit: {\n    message: 'Added a readme'\n  }\n}];\nReactDOM.render( /*#__PURE__*/_jsxDEV(FileList, {\n  files: testFiles\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 66,\n  columnNumber: 5\n}, this), document.querySelector('#root'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FileList\");\n$RefreshReg$(_c2, \"FileListItem\");","map":{"version":3,"sources":["/Users/artur/Documents/GitHub/pure-react/github-file-list/src/index.js"],"names":["React","ReactDOM","PropTypes","Time","FileIcon","CommitMessage","FileName","FileList","files","map","file","id","propTypes","array","FileListItem","latestCommit","updated_at","object","isRequired","testFiles","name","type","message","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,aAAP;AACA,OAAO,uCAAP;;;AAIA,SAASC,QAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA8B;AAC1B,sBACI;AAAO,IAAA,SAAS,EAAC,WAAjB;AAAA,2BACI;AAAA,gBACKA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACX,QAAC,YAAD;AAA4B,QAAA,IAAI,EAAEA;AAAlC,SAAmBA,IAAI,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;KAVQJ,Q;AAYTA,QAAQ,CAACK,SAAT,GAAqB;AACjBJ,EAAAA,KAAK,EAAEN,SAAS,CAACW;AADA,CAArB;;AAIA,MAAMC,YAAY,GAAG,CAAC;AAAEJ,EAAAA;AAAF,CAAD,kBACjB;AAAI,EAAA,SAAS,EAAC,gBAAd;AAAA,0BACI;AAAA,2BAAI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAA,2BAAI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,UAFJ,eAGI;AAAA,2BAAI,QAAC,aAAD;AAAe,MAAA,MAAM,EAAEA,IAAI,CAACK;AAA5B;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,UAHJ,eAII;AAAA,4BAAI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEL,IAAI,CAACM;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;MAAMF,Y;AASNA,YAAY,CAACF,SAAb,GAAyB;AACrBF,EAAAA,IAAI,EAAER,SAAS,CAACe,MAAV,CAAiBC;AADF,CAAzB;AAKA,MAAMC,SAAS,GAAG,CAAE;AAChBR,EAAAA,EAAE,EAAE,CADY;AAEhBS,EAAAA,IAAI,EAAE,KAFU;AAGhBC,EAAAA,IAAI,EAAE,QAHU;AAIhBL,EAAAA,UAAU,EAAE,qBAJI;AAImBD,EAAAA,YAAY,EAAE;AACjDO,IAAAA,OAAO,EAAE;AADwC;AAJjC,CAAF,EAMX;AACHX,EAAAA,EAAE,EAAE,CADD;AAEHS,EAAAA,IAAI,EAAE,OAFH;AAGHC,EAAAA,IAAI,EAAE,QAHH;AAIHL,EAAAA,UAAU,EAAE,qBAJT;AAIgCD,EAAAA,YAAY,EAAE;AACjDO,IAAAA,OAAO,EAAE;AADwC;AAJ9C,CANW,EAYX;AACHX,EAAAA,EAAE,EAAE,CADD;AAEHS,EAAAA,IAAI,EAAE,QAFH;AAGHC,EAAAA,IAAI,EAAE,MAHH;AAIHL,EAAAA,UAAU,EAAE,qBAJT;AAIgCD,EAAAA,YAAY,EAAE;AACjDO,IAAAA,OAAO,EAAE;AADwC;AAJ9C,CAZW,CAAlB;AAsBArB,QAAQ,CAACsB,MAAT,eACI,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA,QADJ,EAEIK,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFJ","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\nimport Time from './Components/Time'\nimport FileIcon from './Components/FileIcon'\nimport CommitMessage from './Components/CommitMessage'\nimport FileName from './Components/FileName'\nimport './index.css'\nimport 'font-awesome/css/font-awesome.min.css';\n\n\n\nfunction FileList ( {files} ) {\n    return (\n        <table className=\"file-list\">\n            <tbody>\n                {files.map(file => (\n                    <FileListItem key={file.id} file={file} />\n                ))}\n            </tbody>\n        </table>\n    )\n}\n\nFileList.propTypes = {\n    files: PropTypes.array\n}\n\nconst FileListItem = ({ file }) => (\n    <tr className=\"file-list-item\">\n        <td><FileIcon file={file} /></td>\n        <td><FileName file={file} /></td>\n        <td><CommitMessage commit={file.latestCommit} /></td>\n        <td><Time time={file.updated_at}/> </td>\n    </tr>\n)\n\nFileListItem.propTypes = {\n    file: PropTypes.object.isRequired\n}\n\n\nconst testFiles = [ {\n    id: 1,\n    name: 'src',\n    type: 'folder',\n    updated_at: \"2016-07-11 21:24:00\", latestCommit: {\n    message: 'Initial commit' }\n    }, {\n    id: 2,\n    name: 'tests',\n    type: 'folder',\n    updated_at: \"2016-07-11 21:24:00\", latestCommit: {\n    message: 'Initial commit' }\n    }, {\n    id: 3,\n    name: 'README',\n    type: 'file',\n    updated_at: \"2016-07-18 21:24:00\", latestCommit: {\n    message: 'Added a readme' }\n    }, ];\n\n\n\nReactDOM.render( \n    <FileList files={testFiles}/>, \n    document.querySelector('#root')\n)\n\n"]},"metadata":{},"sourceType":"module"}