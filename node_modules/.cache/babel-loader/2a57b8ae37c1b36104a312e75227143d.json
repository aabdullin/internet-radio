{"ast":null,"code":"var _jsxFileName = \"/Users/artur/Documents/GitHub/pure-react/github-file-list/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Time from './Time';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FileList({\n  files\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-list\",\n    children: files.map(file => /*#__PURE__*/_jsxDEV(FileListItem, {\n      file: file\n    }, file.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_c = FileList;\nFileList.propTypes = {\n  files: PropTypes.array\n};\n\nconst FileListItem = ({\n  file\n}) => /*#__PURE__*/_jsxDEV(\"tr\", {\n  className: \"file-list-item\",\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(FileIcon, {\n      file: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(FileName, {\n      file: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(CommitMessage, {\n      commit: file.latestCommit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Time, {\n      time: file.updated_at\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 5\n}, this);\n\n_c2 = FileListItem;\nFileListItem.propTypes = {\n  file: PropTypes.object.isRequired\n};\n\nconst CommitMessage = ({\n  commit\n}) => /*#__PURE__*/_jsxDEV(\"td\", {\n  className: \"commit-message\",\n  children: commit.message\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 5\n}, this);\n\n_c3 = CommitMessage;\nCommitMessage.propTypes = {\n  commit: PropTypes.object.isRequired\n};\n\nfunction FileIcon({\n  file\n}) {\n  let icon = 'fa-file-text-o';\n\n  if (file.type === 'folder') {\n    icon = 'fa-folder';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    className: \"file-icon\",\n    children: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: `fa ${icon}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_c4 = FileIcon;\nFileIcon.propTypes = {\n  file: PropTypes.object.isRequired\n};\n\nfunction FileName({\n  file\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"file-name\",\n      children: [file.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c5 = FileName;\nFileName.propTypes = {\n  file: PropTypes.object.isRequired\n};\nconst testFiles = [{\n  id: 1,\n  name: 'src',\n  type: 'folder',\n  updated_at: \"2016-07-11 21:24:00\",\n  latestCommit: {\n    message: 'Initial commit'\n  }\n}, {\n  id: 2,\n  name: 'tests',\n  type: 'folder',\n  updated_at: \"2016-07-11 21:24:00\",\n  latestCommit: {\n    message: 'Initial commit'\n  }\n}, {\n  id: 3,\n  name: 'README',\n  type: 'file',\n  updated_at: \"2016-07-18 21:24:00\",\n  latestCommit: {\n    message: 'Added a readme'\n  }\n}];\nReactDOM.render( /*#__PURE__*/_jsxDEV(FileList, {\n  files: testFiles\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 101,\n  columnNumber: 5\n}, this), document.querySelector('#root'));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"FileList\");\n$RefreshReg$(_c2, \"FileListItem\");\n$RefreshReg$(_c3, \"CommitMessage\");\n$RefreshReg$(_c4, \"FileIcon\");\n$RefreshReg$(_c5, \"FileName\");","map":{"version":3,"sources":["/Users/artur/Documents/GitHub/pure-react/github-file-list/src/index.js"],"names":["React","ReactDOM","PropTypes","Time","FileList","files","map","file","id","propTypes","array","FileListItem","latestCommit","updated_at","object","isRequired","CommitMessage","commit","message","FileIcon","icon","type","FileName","name","testFiles","render","document","querySelector"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\nimport Time from './Time'\nimport './index.css'\nimport 'font-awesome/css/font-awesome.min.css';\n\n\n\nfunction FileList ( {files} ) {\n    return (\n        <div className=\"file-list\">\n            {files.map(file => (\n                <FileListItem key={file.id} file={file} />\n            ))}\n        </div>\n    )\n}\n\nFileList.propTypes = {\n    files: PropTypes.array\n}\n\nconst FileListItem = ({ file }) => (\n    <tr className=\"file-list-item\">\n        <td><FileIcon file={file} /></td>\n        <td><FileName file={file} /></td>\n        <td><CommitMessage commit={file.latestCommit} /></td>\n        <td><Time time={file.updated_at}/> </td>\n    </tr>\n)\n\nFileListItem.propTypes = {\n    file: PropTypes.object.isRequired\n}\n\nconst CommitMessage = ( { commit } ) => (\n    <td className=\"commit-message\"> \n        {commit.message}\n    </td>\n)\n\nCommitMessage.propTypes = {\n    commit: PropTypes.object.isRequired\n}\n\n\n\nfunction FileIcon( {file} ) {\n    let icon = 'fa-file-text-o';\n    if (file.type === 'folder') {\n        icon = 'fa-folder';\n    } \n    return (\n        <td className=\"file-icon\">\n            <i className={`fa ${icon}`}/>\n        </td>\n    )\n}\n\nFileIcon.propTypes = {\n    file: PropTypes.object.isRequired\n}\n\nfunction FileName ({ file }) {\n    return (\n        <>\n            <td className=\"file-name\">{file.name} </td>\n        </>\n    )\n}\n\nFileName.propTypes = {\n    file: PropTypes.object.isRequired\n}\n\n\nconst testFiles = [ {\n    id: 1,\n    name: 'src',\n    type: 'folder',\n    updated_at: \"2016-07-11 21:24:00\", latestCommit: {\n    message: 'Initial commit' }\n    }, {\n    id: 2,\n    name: 'tests',\n    type: 'folder',\n    updated_at: \"2016-07-11 21:24:00\", latestCommit: {\n    message: 'Initial commit' }\n    }, {\n    id: 3,\n    name: 'README',\n    type: 'file',\n    updated_at: \"2016-07-18 21:24:00\", latestCommit: {\n    message: 'Added a readme' }\n    }, ];\n\n\n\nReactDOM.render( \n    <FileList files={testFiles}/>, \n    document.querySelector('#root')\n)\n\n"]},"metadata":{},"sourceType":"module"}