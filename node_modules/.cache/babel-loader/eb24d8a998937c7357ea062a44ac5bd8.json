{"ast":null,"code":"var _jsxFileName = \"/Users/artur/Documents/GitHub/pure-react/github-file-list/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FileList({\n  files\n}) {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"file-list\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: files.map(file => /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"file-list-item\",\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"file-name\",\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this)\n      }, file.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_c = FileList;\nFileList.propTypes = {\n  files: PropTypes.array\n};\n\nconst FileListItem = ({\n  file\n}) => /*#__PURE__*/_jsxDEV(\"tr\", {\n  className: \"file-list-item\",\n  children: /*#__PURE__*/_jsxDEV(FileName, {\n    file: file\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 5\n}, this);\n\n_c2 = FileListItem;\nFileListItem.propTypes = {\n  file: PropTypes.object.isRequired\n};\n\nconst CommitMessage = ({\n  commit\n}) => /*#__PURE__*/_jsxDEV(\"td\", {\n  className: \"commit-message\",\n  children: commit.message\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 5\n}, this);\n\n_c3 = CommitMessage;\nCommi;\n\nfunction FileIcon({\n  file\n}) {\n  let icon = 'fa-file-text-o';\n\n  if (file.type === 'folder') {\n    icon = 'fa-folder';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    className: \"file-icon\",\n    children: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: `fa ${icon}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_c4 = FileIcon;\nFileIcon.propTypes = {\n  file: PropTypes.object.isRequired\n};\n\nfunction FileName({\n  file\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FileIcon, {\n      file: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"file-name\",\n      children: [file.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c5 = FileName;\nFileName.propTypes = {\n  file: PropTypes.object.isRequired\n};\nconst testFiles = [{\n  id: 1,\n  name: 'src',\n  type: 'folder',\n  updated_at: \"2016-07-11 21:24:00\",\n  latestCommit: {\n    message: 'Initial commit'\n  }\n}, {\n  id: 2,\n  name: 'tests',\n  type: 'folder',\n  updated_at: \"2016-07-11 21:24:00\",\n  latestCommit: {\n    message: 'Initial commit'\n  }\n}, {\n  id: 3,\n  name: 'README',\n  type: 'file',\n  updated_at: \"2016-07-18 21:24:00\",\n  latestCommit: {\n    message: 'Added a readme'\n  }\n}];\nReactDOM.render( /*#__PURE__*/_jsxDEV(FileList, {\n  files: testFiles\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 102,\n  columnNumber: 5\n}, this), document.querySelector('#root'));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"FileList\");\n$RefreshReg$(_c2, \"FileListItem\");\n$RefreshReg$(_c3, \"CommitMessage\");\n$RefreshReg$(_c4, \"FileIcon\");\n$RefreshReg$(_c5, \"FileName\");","map":{"version":3,"sources":["/Users/artur/Documents/GitHub/pure-react/github-file-list/src/index.js"],"names":["React","ReactDOM","PropTypes","FileList","files","map","file","name","id","propTypes","array","FileListItem","object","isRequired","CommitMessage","commit","message","Commi","FileIcon","icon","type","FileName","testFiles","updated_at","latestCommit","render","document","querySelector"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\nimport './index.css'\nimport 'font-awesome/css/font-awesome.min.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\n\n\n\nfunction FileList ( {files} ) {\n    return (\n        <table className=\"file-list\">\n            <tbody>\n                {files.map(file => (\n                    <tr className=\"file-list-item\" key={file.id}>\n                        <td className=\"file-name\">{file.name}</td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    )\n}\n\nFileList.propTypes = {\n    files: PropTypes.array\n}\n\nconst FileListItem = ({ file }) => (\n    <tr className=\"file-list-item\">\n        <FileName file={file}/>\n    </tr>\n)\n\nFileListItem.propTypes = {\n    file: PropTypes.object.isRequired\n}\n\nconst CommitMessage = ( { commit } ) => (\n    <td className=\"commit-message\"> \n        {commit.message}\n    </td>\n)\n\nCommi\n\n\n\nfunction FileIcon( {file} ) {\n    let icon = 'fa-file-text-o';\n    if (file.type === 'folder') {\n        icon = 'fa-folder';\n    } \n    return (\n        <td className=\"file-icon\">\n            <i className={`fa ${icon}`}/>\n        </td>\n    )\n}\n\nFileIcon.propTypes = {\n    file: PropTypes.object.isRequired\n}\n\nfunction FileName ({ file }) {\n    return (\n        <>\n            <FileIcon file={file}/>\n            <td className=\"file-name\">{file.name} </td>\n        </>\n    )\n}\n\nFileName.propTypes = {\n    file: PropTypes.object.isRequired\n}\n\n\nconst testFiles = [ {\n    id: 1,\n    name: 'src',\n    type: 'folder',\n    updated_at: \"2016-07-11 21:24:00\", latestCommit: {\n    message: 'Initial commit' }\n    }, {\n    id: 2,\n    name: 'tests',\n    type: 'folder',\n    updated_at: \"2016-07-11 21:24:00\", latestCommit: {\n    message: 'Initial commit' }\n    }, {\n    id: 3,\n    name: 'README',\n    type: 'file',\n    updated_at: \"2016-07-18 21:24:00\", latestCommit: {\n    message: 'Added a readme' }\n    }, ];\n\n\n\nReactDOM.render( \n    <FileList files={testFiles}/>, \n    document.querySelector('#root')\n)\n\n"]},"metadata":{},"sourceType":"module"}